name: CI

on:
  workflow_dispatch:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  DOCKERHUB_USERNAME: nokal
  DOCKERHUB_REPO: nokal/simod

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Compose a version
        id: versioning
        uses: paulhatch/semantic-version@v4.0.2
        with:
          prefix: "v"
          major_pattern: "BREAKING CHANGE:"
          minor_pattern: "feat:"
          patch_pattern: "fix:"
          format: "${major}.${minor}.${patch}-prerelease${increment}"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        with:
          use: linux/amd64

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push to DockerHub
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ${{ env.DOCKERHUB_REPO }}:latest,${{ env.DOCKERHUB_REPO }}:${{ steps.versioning.outputs.version }}
          file: docker/simod_build.dockerfile
          context: docker/
          platforms: linux/amd64

      - name: Create a release
        if: ${{ !startsWith(github.ref, 'refs/tags/') }}
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          tag_name: ${{ steps.versioning.outputs.version }}
          release_name: ${{ steps.versioning.outputs.version }}
          prerelease: true

  test:
    needs: [ build ]
    runs-on: ubuntu-latest
    container:
      image: ${{ env.DOCKERHUB_REPO }}:${{ jobs.build.steps.versioning.outputs.version }}
    env:
      BRANCH_NAME: master
    steps:
      - name: Testing
        run: bash docker/test.bash

  security:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Snyk scan
        uses: snyk/actions/python-3.8@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --sarif-file-output=snyk.sarif
      - name: Upload result to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: snyk.sarif
